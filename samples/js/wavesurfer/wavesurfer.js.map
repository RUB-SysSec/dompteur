{"version":3,"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/util/ajax.js","webpack://WaveSurfer/./src/util/extend.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/webaudio.js"],"names":["util","Drawer","container","params","width","height","pixelRatio","lastPos","wrapper","el","styles","style","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progress","left","scrollLeft","scrollWidth","addEventListener","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","peaks","length","start","end","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","Math","max","min","x","round","updateSize","minPxDelta","pos","autoCenter","newPos","updateProgress","unAll","parentNode","removeChild","channelIndex","Observer","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","hasProgressCanvas","waveColor","progressColor","halfPixel","canvases","progressWave","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","totalWidth","requiredCanvases","ceil","removeCanvas","forEach","entry","i","canvasWidth","updateDimensions","clearWaveForEntry","leftOffset","wave","waveCtx","getContext","progressCtx","push","lastEntry","pop","parentElement","elementWidth","canvas","offsetLeft","clearRect","prepareDraw","absmax","hasMinVals","offsetY","halfH","undefined","peakIndexScale","bar","gap","barGap","step","scale","first","last","peak","floor","h","fillRect","reflectedPeaks","len","drawLine","setFillStyles","drawLineToContext","ctx","canvasStart","canvasEnd","j","beginPath","moveTo","lineTo","closePath","fill","y","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRectToContext","fn","frame","Array","channels","splitChannels","setHeight","channelPeaks","barHeight","normalize","some","call","val","fillStyle","type","quality","images","map","toDataURL","MediaElement","media","currentTime","duration","paused","playbackRate","play","pause","volume","mediaType","toLowerCase","elementPosition","buffer","onPlayEnd","setPlaybackRate","audioRate","createTimer","onAudioProcess","isPaused","getCurrentTime","requestAnimationFrame","window","webkitRequestAnimationFrame","on","url","preload","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","load","setVolume","explicitDuration","Infinity","seekable","getDuration","value","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","Promise","reject","Error","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","filter","item","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","ajax","options","instance","xhr","XMLHttpRequest","fired100","open","method","responseType","requestHeaders","setRequestHeader","header","key","withCredentials","lengthComputable","loaded","total","status","response","send","extend","dest","sources","Object","keys","source","func","args","getId","random","toString","substring","default","values","largest","smallest","Number","handlers","event","name","callback","splice","handler","apply","setTimeout","preventClick","preventClickHandler","stopPropagation","body","removeEventListener","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","element","bind","prop","PluginClass","ws","WaveSurfer","wavesurfer","init","defaultParams","audioContext","backend","dragSelection","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","backends","savedVolume","isMuted","tmpEvents","currentAjax","arraybuffer","drawer","peakCache","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","addPlugin","plugin","deferInit","initPlugin","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","prototype","destroyPlugin","destroy","drawBuffer","getPlayedPercents","supportsWebAudio","seconds","skip","seekAndCenter","recenter","isFinite","console","error","oldScrollParent","newVolume","getVolume","getPlaybackRate","setMute","mute","filters","color","getScrollX","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","loadDecodedBuffer","data","blob","reader","FileReader","onProgress","loadArrayBuffer","result","readAsArrayBuffer","empty","preloadIgnoreReasons","indexOf","activeReasons","reason","warn","join","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","statusText","percentComplete","accuracy","noWindow","json","JSON","stringify","encodeURIComponent","format","getImage","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","VERSION","__VERSION__","PLAYING","PAUSED","FINISHED","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","offlineAudioContext","stateBehaviors","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","ac","getAudioContext","lastPlay","scheduledPause","states","create","analyser","gainNode","mergedPeaks","offlineAc","scriptNode","splitPeaks","state","createVolumeNode","createScriptNode","createAnalyserNode","setState","setLength","disconnect","connect","setFilters","disconnectFilters","reduce","prev","curr","audioScriptProcessor","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","getOfflineAudioContext","decodeAudioData","numberOfChannels","c","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","close","createSource","createBufferSource","noteGrainOn","noteOff","adjustedTime","resume"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;ACrEA;;IAAYA,I;;;;;;;;;;AACZ;;;;;IAKqBC,M;;;AACjB;;;;AAIA,oBAAYC,SAAZ,EAAuBC,MAAvB,EAA+B;AAAA;;AAE3B;AAF2B;;AAG3B,cAAKD,SAAL,GAAiBA,SAAjB;AACA;;;;AAIA,cAAKC,MAAL,GAAcA,MAAd;AACA;;;;AAIA,cAAKC,KAAL,GAAa,CAAb;AACA;;;;AAIA,cAAKC,MAAL,GAAcF,OAAOE,MAAP,GAAgB,MAAKF,MAAL,CAAYG,UAA1C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","file":"wavesurfer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/wavesurfer.js\");\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","import * as util from './util';\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n        /** @private */\n        this.container = container;\n        /**\n         * @type {WavesurferParams}\n         * @private\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n        /** @private */\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = this.container.appendChild(\n            document.createElement('wave')\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = e.targetTouches\n            ? e.targetTouches[0].clientX\n            : e.clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n\n        let progress;\n\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress =\n                (clientX - bbox.left) *\n                    (this.params.pixelRatio / nominalWidth) || 0;\n\n            if (progress > 1) {\n                progress = 1;\n            }\n        } else {\n            progress =\n                (clientX - bbox.left + this.wrapper.scrollLeft) /\n                    this.wrapper.scrollWidth || 0;\n        }\n\n        return progress;\n    }\n\n    /**\n     * @private\n     */\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const scrollbarHeight =\n                this.wrapper.offsetHeight - this.wrapper.clientHeight;\n            if (scrollbarHeight != 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (e.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the viewport at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the viewport on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // we'll limit the \"re-center\" rate.\n            const rate = 5;\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number}\n     */\n    getScrollX() {\n        const pixelRatio = this.params.pixelRatio;\n        let x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n        // In cases of elastic scroll (safari with mouse wheel) you can\n        // scroll beyond the limits of the container\n        // Calculate and floor the scrollable extent to make sure an out\n        // of bounds value is not returned\n        // Ticket #1312\n        if (this.params.scrollParent) {\n            const maxScroll = ~~(\n                this.wrapper.scrollWidth * pixelRatio -\n                this.getWidth()\n            );\n            x = Math.min(maxScroll, Math.max(0, x));\n        }\n\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number}\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            this.style(this.wrapper, {\n                width: ~~(this.width / this.params.pixelRatio) + 'px'\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be renderered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(newPos);\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container) {\n                this.container.removeChild(this.wrapper);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\n\n/**\n * @typedef {Object} CanvasEntry\n * @private\n * @property {HTMLElement} wave The wave node\n * @property {CanvasRenderingContext2D} waveCtx The canvas rendering context\n * @property {?HTMLElement} progress The progress wave node\n * @property {?CanvasRenderingContext2D} progressCtx The progress wave canvas\n * rendering context\n * @property {?number} start Start of the area the canvas should render, between 0 and 1\n * @property {?number} end End of the area the canvas should render, between 0 and 1\n */\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole built\n * in renderer.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is renderered. If the `waveColor`\n         * and `progressColor` are the same colour it is not.\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n        /**\n         * @private\n         * @type {Array}\n         */\n        this.canvases = [];\n        /** @private */\n        this.progressWave = null;\n    }\n\n    /**\n     * Initialise the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     * @private\n     */\n    createElements() {\n        this.progressWave = this.wrapper.appendChild(\n            this.style(document.createElement('wave'), {\n                position: 'absolute',\n                zIndex: 3,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid',\n                pointerEvents: 'none'\n            })\n        );\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style from params.\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / this.maxCanvasElementWidth\n        );\n\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        this.canvases.forEach((entry, i) => {\n            // Add some overlap to prevent vertical white stripes, keep the width even for simplicity.\n            let canvasWidth =\n                this.maxCanvasWidth + 2 * Math.ceil(this.params.pixelRatio / 2);\n\n            if (i == this.canvases.length - 1) {\n                canvasWidth =\n                    this.width -\n                    this.maxCanvasWidth * (this.canvases.length - 1);\n            }\n\n            this.updateDimensions(entry, canvasWidth, this.height);\n            this.clearWaveForEntry(entry);\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     * @private\n     */\n    addCanvas() {\n        const entry = {};\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        entry.wave = this.wrapper.appendChild(\n            this.style(document.createElement('canvas'), {\n                position: 'absolute',\n                zIndex: 2,\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%',\n                pointerEvents: 'none'\n            })\n        );\n        entry.waveCtx = entry.wave.getContext('2d');\n\n        if (this.hasProgressCanvas) {\n            entry.progress = this.progressWave.appendChild(\n                this.style(document.createElement('canvas'), {\n                    position: 'absolute',\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0,\n                    height: '100%'\n                })\n            );\n            entry.progressCtx = entry.progress.getContext('2d');\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop one canvas from the list\n     *\n     * @private\n     */\n    removeCanvas() {\n        const lastEntry = this.canvases.pop();\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave);\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress);\n        }\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // Where the canvas starts and ends in the waveform, represented as a decimal between 0 and 1.\n        entry.start = entry.waveCtx.canvas.offsetLeft / totalWidth || 0;\n        entry.end = entry.start + elementWidth / totalWidth;\n\n        entry.waveCtx.canvas.width = width;\n        entry.waveCtx.canvas.height = height;\n        this.style(entry.waveCtx.canvas, { width: elementWidth + 'px' });\n\n        this.style(this.progressWave, { display: 'block' });\n\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.canvas.width = width;\n            entry.progressCtx.canvas.height = height;\n            this.style(entry.progressCtx.canvas, {\n                width: elementWidth + 'px'\n            });\n        }\n    }\n\n    /**\n     * Clear the whole waveform\n     */\n    clearWave() {\n        this.canvases.forEach(entry => this.clearWaveForEntry(entry));\n    }\n\n    /**\n     * Clear one canvas\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     */\n    clearWaveForEntry(entry) {\n        entry.waveCtx.clearRect(\n            0,\n            0,\n            entry.waveCtx.canvas.width,\n            entry.waveCtx.canvas.height\n        );\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.clearRect(\n                0,\n                0,\n                entry.progressCtx.canvas.width,\n                entry.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                              this.params.pixelRatio,\n                              this.params.barGap * this.params.pixelRatio\n                          );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let i;\n\n                for (i = first; i < last; i += step) {\n                    const peak =\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                    const h = Math.round((peak / absmax) * halfH);\n                    this.fillRect(\n                        i + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i;\n                    for (i = 0; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end);\n                }\n\n                // Always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @private\n     * @param {number[]} peaks Peak data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end) {\n        this.canvases.forEach(entry => {\n            this.setFillStyles(entry);\n            this.drawLineToContext(\n                entry,\n                entry.waveCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n            this.drawLineToContext(\n                entry,\n                entry.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        });\n    }\n\n    /**\n     * Render the actual waveform line on a canvas\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     * @param {Canvas2DContextAttributes} ctx Essentially `entry.[wave|progress]Ctx`\n     * @param {number[]} peaks\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(entry, ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const scale =\n            this.params.fillParent && this.width != length\n                ? this.width / length\n                : 1;\n\n        const first = Math.round(length * entry.start);\n        // Use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas.\n        const last = Math.round(length * entry.end) + 1;\n        if (first > end || last < start) {\n            return;\n        }\n        const canvasStart = Math.min(first, start);\n        const canvasEnd = Math.max(last, end);\n        let i;\n        let j;\n\n        ctx.beginPath();\n        ctx.moveTo(\n            (canvasStart - first) * scale + this.halfPixel,\n            halfH + offsetY\n        );\n\n        for (i = canvasStart; i < canvasEnd; i++) {\n            const peak = peaks[2 * i] || 0;\n            const h = Math.round((peak / absmax) * halfH);\n            ctx.lineTo(\n                (i - first) * scale + this.halfPixel,\n                halfH - h + offsetY\n            );\n        }\n\n        // Draw the bottom edge going backwards, to make a single\n        // closed hull to fill.\n        for (j = canvasEnd - 1; j >= canvasStart; j--) {\n            const peak = peaks[2 * j + 1] || 0;\n            const h = Math.round((peak / absmax) * halfH);\n            ctx.lineTo(\n                (j - first) * scale + this.halfPixel,\n                halfH - h + offsetY\n            );\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Draw a rectangle on the waveform\n     *\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     */\n    fillRect(x, y, width, height) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i;\n        for (i = startCanvas; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.waveCtx.canvas.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                this.setFillStyles(entry);\n\n                this.fillRectToContext(\n                    entry.waveCtx,\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1\n                );\n\n                this.fillRectToContext(\n                    entry.progressCtx,\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1\n                );\n            }\n        }\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by drawBars and drawWave\n     *\n     * @private\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n                if (this.params.splitChannels) {\n                    this.setHeight(\n                        channels.length *\n                            this.params.height *\n                            this.params.pixelRatio\n                    );\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn)\n                    );\n                }\n                peaks = channels[0];\n            }\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                const max = util.max(peaks);\n                const min = util.min(peaks);\n                absmax = -min > max ? -min : max;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const offsetY = height * channelIndex || 0;\n            const halfH = height / 2;\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks\n            });\n        })();\n    }\n\n    /**\n     * Draw the actual rectangle on a canvas\n     *\n     * @private\n     * @param {Canvas2DContextAttributes} ctx\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     */\n    fillRectToContext(ctx, x, y, width, height) {\n        if (!ctx) {\n            return;\n        }\n        ctx.fillRect(x, y, width, height);\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     */\n    setFillStyles(entry) {\n        entry.waveCtx.fillStyle = this.params.waveColor;\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.fillStyle = this.params.progressColor;\n        }\n    }\n\n    /**\n     * Return image data of the waveform\n     *\n     * @param {string} type='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @return {string|string[]} images A data URL or an array of data URLs\n     */\n    getImage(type, quality) {\n        const images = this.canvases.map(entry =>\n            entry.wave.toDataURL(type, quality)\n        );\n        return images.length > 1 ? images : images[0];\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        // Dummy media to catch errors\n        /** @private */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     *\n     * @private\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            const requestAnimationFrame =\n                window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame;\n            requestAnimationFrame(onAudioProcess);\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|number[][]} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|number[][]} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks);\n    }\n\n    /**\n     * Private method called by both load (from url)\n     * and loadElt (existing media element).\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|number[][]} peaks Array of peak data\n     * @private\n     */\n    _load(media, peaks) {\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        if (typeof media.load == 'function') {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        media.addEventListener('error', () => {\n            this.fireEvent('error', 'Error loading media element');\n        });\n\n        media.addEventListener('canplay', () => {\n            this.fireEvent('canplay');\n        });\n\n        media.addEventListener('ended', () => {\n            this.fireEvent('finish');\n        });\n\n        // Listen to and relay play and pause events to enable\n        // playback control from the external media element\n        media.addEventListener('play', () => {\n            this.fireEvent('play');\n        });\n\n        media.addEventListener('pause', () => {\n            this.fireEvent('pause');\n        });\n\n        this.media = media;\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean}\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number}\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audioclip's\n     * duration.\n     *\n     * @return {number}\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number}\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number}\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise}\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise}\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /** @private */\n    setPlayEnd(end) {\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|number[][]} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume || this.media.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        this.media.volume = this.volume;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for lage audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {number[][]}\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {number[][]}\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import Observer from './observer';\n\n/**\n * Perform an ajax request\n *\n * @param {Options} options Description\n *\n * @returns {Object} Observer instance\n */\nexport default function ajax(options) {\n    const instance = new Observer();\n    const xhr = new XMLHttpRequest();\n    let fired100 = false;\n    xhr.open(options.method || 'GET', options.url, true);\n    xhr.responseType = options.responseType || 'json';\n\n    if (options.xhr) {\n        if (options.xhr.requestHeaders) {\n            // add custom request headers\n            options.xhr.requestHeaders.forEach(header => {\n                xhr.setRequestHeader(header.key, header.value);\n            });\n        }\n        if (options.xhr.withCredentials) {\n            // use credentials\n            xhr.withCredentials = true;\n        }\n    }\n\n    xhr.addEventListener('progress', e => {\n        instance.fireEvent('progress', e);\n        if (e.lengthComputable && e.loaded == e.total) {\n            fired100 = true;\n        }\n    });\n    xhr.addEventListener('load', e => {\n        if (!fired100) {\n            instance.fireEvent('progress', e);\n        }\n        instance.fireEvent('load', e);\n        if (200 == xhr.status || 206 == xhr.status) {\n            instance.fireEvent('success', xhr.response, e);\n        } else {\n            instance.fireEvent('error', e);\n        }\n    });\n    xhr.addEventListener('error', e => instance.fireEvent('error', e));\n    xhr.send();\n    instance.xhr = xhr;\n    return instance;\n}\n","/**\n * Extend an object shallowly with others\n *\n * @param {Object} dest The target object\n * @param {Object[]} sources The objects to use for extending\n *\n * @return {Object} Merged object\n */\nexport default function extend(dest, ...sources) {\n    sources.forEach(source => {\n        Object.keys(source).forEach(key => {\n            dest[key] = source[key];\n        });\n    });\n    return dest;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @returns {String} Random ID\n */\nexport default function getId() {\n    return (\n        'wavesurfer_' +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as ajax } from './ajax';\nexport { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as Observer } from './observer';\nexport { default as extend } from './extend';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number}       Smallest number found\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor}\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor}\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers) {\n            return;\n        }\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","function preventClickHandler(e) {\n    e.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/**\n * Returns the requestAnimationFrame function for the browser, or a shim with\n * setTimeout if none is found\n *\n * @return {function}\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform around the progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for\n * unsupported browsers.\n * @property {number} barHeight=1 The height of the wave\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement`)\n * `'audio'|'video'`\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with seperate waveforms for\n * the channels of the audio\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options.\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {Object} params={} The plugin params (specific to the plugin)\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} ws The wavesurfer instance\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    constructor(ws, params) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioRate: 1,\n        autoCenter: true,\n        backend: 'WebAudio',\n        barHeight: 1,\n        barGap: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this}\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = util.extend({}, this.defaultParams, params);\n\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * cancelled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentAjax = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n        /** @private */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(() => {\n            if (\n                prevWidth != this.drawer.wrapper.clientWidth &&\n                !this.params.scrollParent\n            ) {\n                prevWidth = this.drawer.wrapper.clientWidth;\n                this.drawer.fireEvent('redraw');\n            }\n        }, typeof this.params.responsive === 'number' ? this.params.responsive : 100);\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this}\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this}\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this}\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this}\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this}\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            this.params.backend == 'WebAudio' &&\n            !this.Backend.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => this.fireEvent('finish'));\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise}\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Stops playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise}\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise}\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            return console.error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const paused = this.backend.isPaused();\n        // avoid draw wrong position while playing backward seeking\n        if (!paused) {\n            this.backend.pause();\n        }\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (!paused) {\n            this.backend.play();\n        }\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {string} deviceId String value representing underlying output device\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number}\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. It not currenly muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (mute) {\n            // If currently not muted then save current volume,\n            // turn off the volume and update the mute properties\n            this.savedVolume = this.backend.getVolume();\n            this.backend.setVolume(0);\n            this.isMuted = true;\n            this.fireEvent('volume', 0);\n        } else {\n            // If currently muted then restore to the saved volume\n            // and update the mute properties\n            this.backend.setVolume(this.savedVolume);\n            this.isMuted = false;\n            this.fireEvent('volume', this.savedVolume);\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean}\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the current ready status.\n     *\n     * @example const isReady = wavesurfer.isReady();\n     * @return {boolean}\n     */\n    isReady() {\n        return this.isReady;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array}\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getWaveColor() {\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color) {\n        this.params.waveColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getProgressColor() {\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color) {\n        this.params.progressColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave viewport and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        let start = this.drawer.getScrollX();\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.fireEvent('ready');\n        this.isReady = true;\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {?number[]|number[][]} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current minPxPerSec and zoom value) without having to decode\n     * the audio.\n     * @example\n     * // using ajax or media element to load (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * peaks wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true,\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        this.empty();\n\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                'Backend is not of type MediaElement':\n                    this.params.backend !== 'MediaElement',\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @param {string} url\n     * @param {?number[]|number[][]} peaks\n     * @param {?number} duration\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|number[][]} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                this.drawBuffer();\n                this.fireEvent('ready');\n                this.isReady = true;\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If no pre-decoded peaks provided or pre-decoded peaks are\n        // provided with forceDecode flag, attempt to download the\n        // audio file and decode it with Web Audio.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n        }\n\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer\n     * @param {function} callback\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        this.arraybuffer = arraybuffer;\n\n        this.backend.decodeArrayBuffer(\n            arraybuffer,\n            data => {\n                // Only use the decoded data if we haven't been destroyed or\n                // another decode started in the meantime\n                if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                    callback(data);\n                    this.arraybuffer = null;\n                }\n            },\n            () => this.fireEvent('error', 'Error decoding audiobuffer')\n        );\n    }\n\n    /**\n     * Load an array buffer by ajax and pass to a callback\n     *\n     * @param {string} url\n     * @param {function} callback\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        const ajax = util.ajax({\n            url: url,\n            responseType: 'arraybuffer',\n            xhr: this.params.xhr\n        });\n\n        this.currentAjax = ajax;\n\n        this.tmpEvents.push(\n            ajax.on('progress', e => {\n                this.onProgress(e);\n            }),\n            ajax.on('success', (data, e) => {\n                callback(data);\n                this.currentAjax = null;\n            }),\n            ajax.on('error', e => {\n                this.fireEvent('error', 'XHR error: ' + e.target.statusText);\n                this.currentAjax = null;\n            })\n        );\n\n        return ajax;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and opens in a new window.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks. (Integer)\n     * @param {number} accuracy=10000 (Integer)\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start\n     * @todo Update exportPCM to work with new getPeaks signature\n     * @return {string} JSON of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n        const json = JSON.stringify(arr);\n        if (!noWindow) {\n            window.open(\n                'data:application/json;charset=utf-8,' +\n                    encodeURIComponent(json)\n            );\n        }\n        return json;\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `image/png`. Other supported types are\n     * `image/jpeg` and `image/webp`.\n     *\n     * @param {string} format='image/png'\n     * @param {number} quality=1\n     * @return {string} data URI of image\n     */\n    exportImage(format, quality) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n\n        return this.drawer.getImage(format, quality);\n    }\n\n    /**\n     * Cancel any ajax request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentAjax) {\n            this.currentAjax.xhr.abort();\n            this.currentAjax = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        this.backend.destroy();\n        this.drawer.destroy();\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using consts to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** @private */\n    static scriptBufferSize = 256;\n    /** @private */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean}\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext}\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate\n     * @return {OfflineAudioContext}\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.ac = params.audioContext || this.getAudioContext();\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private  */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** @private */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /** @private */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n\n    /** @private */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n\n    /** @private */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     * @private\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            let audio = new window.Audio();\n            if (!audio.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            audio.autoplay = true;\n            var dest = this.ac.createMediaStreamDestination();\n            this.gainNode.disconnect();\n            this.gainNode.connect(dest);\n            audio.srcObject = dest.stream;\n\n            return audio.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /** @private */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac ? this.ac.sampleRate : 44100\n            );\n        }\n        this.offlineAc.decodeAudioData(\n            arraybuffer,\n            data => callback(data),\n            errback\n        );\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|number[][]} peaks\n     * @param {?number} duration\n     */\n    setPeaks(peaks, duration) {\n        this.explicitDuration = duration;\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio).\n     *\n     * @param {number} length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|number[][]} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                let min = 0;\n                let max = 0;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number}\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean}\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number}\n     */\n    getDuration() {\n        if (!this.buffer) {\n            if (this.explicitDuration) {\n                return this.explicitDuration;\n            }\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}}\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number}\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start, end - start);\n\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        this.source && this.source.stop(0);\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audioclip's\n     * duration.\n     *\n     * @return {number}\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number}\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value\n     */\n    setPlaybackRate(value) {\n        value = value || 1;\n        if (this.isPaused()) {\n            this.playbackRate = value;\n        } else {\n            this.pause();\n            this.playbackRate = value;\n            this.play();\n        }\n    }\n}\n"],"sourceRoot":""}